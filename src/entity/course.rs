//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "course")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub course_term: String,
    pub course_code: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub course_no: String,
    pub course_fname: String,
    pub course_sname: String,
    pub course_type: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::student::Entity")]
    Student,
    #[sea_orm(
        belongs_to = "super::term::Entity",
        from = "Column::CourseTerm",
        to = "super::term::Column::TermNo",
        on_update = "Cascade",
        on_delete = "NoAction"
    )]
    Term,
}

impl Related<super::student::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Student.def()
    }
}

impl Related<super::term::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Term.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
