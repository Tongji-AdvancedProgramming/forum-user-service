//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use super::sea_orm_active_enums::HwupIsDel;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "homework_uploaded")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub hwup_term: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub hwup_ccode: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub hwup_id: String,
    pub hwup_week: i8,
    pub hwup_chapter: i8,
    pub hwup_filename: String,
    pub hwup_filemd5: String,
    pub hwup_description: String,
    pub hwup_date_add: DateTime,
    pub hwup_is_del: HwupIsDel,
    #[sea_orm(column_type = "Text", nullable)]
    pub hwup_comment: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::term::Entity",
        from = "Column::HwupTerm",
        to = "super::term::Column::TermNo",
        on_update = "Cascade",
        on_delete = "NoAction"
    )]
    Term,
}

impl Related<super::term::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Term.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
